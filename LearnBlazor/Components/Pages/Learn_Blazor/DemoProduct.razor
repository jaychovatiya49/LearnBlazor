@page "/learnBlazor/demoProduct"

<h2 class="text-primary">Demo Project</h2>
<p>Favorite Count : @string.Join(", ", FavoriteCount)</p>
<div class="p-2 mt-2">
	<div class="row">
		@foreach (var prod in ProductList)
		{
			<_IndividualProduct Product="prod" onFavoriteUpdated="FavoriteCountChanged">

			</_IndividualProduct>

		}
	</div>
</div>

@code {
	List<Product> ProductList = new();

	public List<int> FavoriteCount = new();

	protected override void OnInitialized()
	{
		ProductList.Add(new()
			{
				Id = 1,
				Name = "Midnight Blaze",
				IsActive = false,
				Price = 5.99,
				ProductProperties = new List<Product_Prop>()
				{
					new Product_Prop { Id = 1, Key = "Flavor", Value = "Rose"},
					new Product_Prop { Id = 2, Key = "Size", Value = "20oz"},
					new Product_Prop { Id = 3, Key = "Color", Value="Purple" }
				}
			});

		ProductList.Add(new()
			{
				Id = 2,
				Name = "Blossom Lily",
				IsActive = true,
				Price = 10.59,
				ProductProperties = new List<Product_Prop>()
				{
					new Product_Prop { Id = 1, Key = "Flavor", Value = "Lily" },
					new Product_Prop { Id = 2, Key = "Size", Value = "18oz" },
					new Product_Prop {Id = 3,Key = "Color",Value = "White"}
				}
			});
	}

	protected void FavoriteCountChanged((int productId, bool isSelected) selection)
	{

		if (selection.isSelected) // Add product ID if selected
		{
			if (!FavoriteCount.Contains(selection.productId))
			{
				FavoriteCount.Add(selection.productId);
			}
		}
		else // Remove product ID if unselected
		{
			if (FavoriteCount.Contains(selection.productId))
			{
				FavoriteCount.Remove(selection.productId);
			}
		}
	}
}
