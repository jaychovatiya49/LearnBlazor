@page "/blazorjs"
@inject IJSRuntime _JsRuntime
<h3>BlazorJs</h3>

<div class="row">
	<button class="btn btn-primary" onclick="@ConfimeMessage">Test Confirm Box</button>
</div>

<div class="row">
	@if (ConfirmResult)
	{
		<p>Cofirmation done</p>
	}
	else
	{
		<p>Cofirmation pending</p>
	}
</div>

<div class="row">
	<button class="btn btn-success m-2" style="width:200px" @onclick="ToastrSuccess">Toastr Success</button>
	<button class="btn btn-danger m-2" style="width:200px" @onclick="ToastrError">Toastr Error</button>
</div>

<div class="row">
	<button class="btn btn-success m-2" style="width:200px" @onclick="SweetalertSuccess">Sweet Success</button>
	<button class="btn btn-danger m-2" style="width:200px" @onclick="SweetalertError">Sweet Error</button>
</div>

@code {
	private string Message = "Are you sure want to click here?";

	public bool ConfirmResult { get; set; }

	private async Task ConfimeMessage()
	{
		ConfirmResult = await _JsRuntime.InvokeAsync<bool>("confirm", Message);
	}

	private async Task ToastrSuccess()
	{
		await _JsRuntime.InvokeVoidAsync("showToastr", "success", "Success Notification");
		//await _JsRuntime.ToastrSuccess("Success Notification");
	}

	private async Task ToastrError()
	{

		await _JsRuntime.ToastrError("Error Notification");
	}

	private async Task SweetalertSuccess()
	{
		await _JsRuntime.InvokeVoidAsync("showSwal", "success", "Task Completed");
	}
	
	private async Task SweetalertError()	
	{
		await _JsRuntime.InvokeVoidAsync("showSwal", "error", "Task Failed");
	}
}
